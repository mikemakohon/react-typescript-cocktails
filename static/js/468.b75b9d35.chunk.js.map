{"version":3,"file":"static/js/468.b75b9d35.chunk.js","mappings":"6LAmCA,IAxByB,SAAC,GAAgD,IAA9CA,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,GAAIC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,MACjD,OACE,SAAC,IAAD,CAAMC,GAAI,CAAEC,SAAU,IAAKC,OAAQ,UAAnC,UACE,SAAC,IAAD,CAAgBC,UAAWN,EAA3B,UACE,UAAC,KAAD,CAAMO,MAAO,CAAEC,eAAgB,QAAUC,GAAE,oBAAeT,GAA1D,WACE,SAAC,IAAD,CAAWU,UAAU,MAAMC,OAAO,MAAMb,MAAOA,EAAOc,IAAKb,KAC3D,UAAC,IAAD,YACE,SAAC,IAAD,CAAYI,GAAI,CAAEU,UAAW,IAAMC,QAAQ,KAAKC,MAAM,YAAtD,SACGhB,KAEH,UAAC,IAAD,CAAYe,QAAQ,QAAQC,MAAM,iBAAlC,WACE,UAAC,IAAD,CAAgBC,YAAaf,EAA7B,cAAqCA,KADvC,KAC8D,kBAAO,IADrE,UAGE,SAAC,IAAD,CAAkBgB,UAAWf,EAAMgB,cAAnC,SACGhB,EAAMgB,4BAQtB,C,iKC9BYC,GAAaC,E,QAAAA,IAAOC,EAAAA,GAAPD,CAAH,0C,kBCuDvB,EAlDkB,WAChB,OAAoCE,EAAAA,EAAAA,WAAS,WAC3C,OAAOC,KAAKC,MACVC,aAAaC,QAAQC,EAAAA,IAAuB,KAE/C,IAJD,eAAOC,EAAP,KAAmBC,EAAnB,KAMMC,GAAqBC,EAAAA,EAAAA,cACzB,SAACC,GACC,IAAIA,EAAMC,cAAcC,QAAxB,CAIA,IAAMnC,EAAOiC,EAAMC,cAAcE,QAAQpC,KAEzC,GAAKA,EAAL,CAIA,IAAMqC,EAAQR,EAAWS,QAAO,SAACC,GAAD,OAAUA,EAAKvC,OAASA,CAAxB,IAChC8B,EAAcO,GACdX,aAAac,QAAQ,YAAahB,KAAKiB,UAAL,OAAeJ,QAAf,IAAeA,EAAAA,EAAS,IAJzD,CANA,CAWF,GACD,CAACR,IAGH,OACE,+BACE,SAACP,EAAA,GAAD,CAAMoB,WAAS,EAACC,WAAW,SAASC,eAAe,SAAnD,SACGf,EAAWgB,KAAI,SAACC,EAAUC,GAAX,OACd,UAAC3B,EAAD,CAAYmB,MAAI,EAACS,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAApC,WACE,SAACC,EAAA,EAAD,CACEC,WACE,CACE,YAAaN,EAAS9C,MAG1BqD,SAAUtB,EACVuB,MAAM,SAACC,EAAA,EAAD,IACNpB,SAAS,EACTqB,aAAa,SAACC,EAAA,EAAD,OAEf,SAACC,EAAA,GAAD,UAAwCZ,GAAjBA,EAAS7C,MAZU8C,EAD9B,OAmBvB,C","sources":["components/CocktailList/components/CocktailListItem/CocktailListItem.tsx","pages/Favorites/styled.ts","pages/Favorites/Favorites.tsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActionArea,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { AlcoholWrapper, GlassTypeWrapper } from \"./styled\";\r\nimport { Cocktail } from \"../../../../utils/types\";\r\n\r\nconst CocktailListItem = ({ image, name, id, info, glass }: Cocktail) => {\r\n  return (\r\n    <Card sx={{ maxWidth: 400, margin: \"0 auto\" }}>\r\n      <CardActionArea disabled={!id}>\r\n        <Link style={{ textDecoration: \"none\" }} to={`/cocktail/${id}`}>\r\n          <CardMedia component=\"img\" height=\"250\" image={image} alt={name} />\r\n          <CardContent>\r\n            <Typography sx={{ minHeight: 65 }} variant=\"h5\" color=\"secondary\">\r\n              {name}\r\n            </Typography>\r\n            <Typography variant=\"body1\" color=\"text.secondary\">\r\n              <AlcoholWrapper alcoholInfo={info}> {info}</AlcoholWrapper> <br />{\" \"}\r\n              glass:\r\n              <GlassTypeWrapper glassType={glass.toLowerCase()}>\r\n                {glass.toLowerCase()}\r\n              </GlassTypeWrapper>\r\n            </Typography>\r\n          </CardContent>\r\n        </Link>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CocktailListItem;\r\n","import styled from \"styled-components\";\r\nimport { Grid } from \"@mui/material\";\r\n\r\nexport const StyledGrid = styled(Grid)`\r\n  padding: 16px;\r\n`;\r\n","import { SyntheticEvent, useCallback, useState } from \"react\";\r\nimport { Cocktail } from \"../../utils/types\";\r\nimport { Checkbox, Grid } from \"@mui/material\";\r\nimport CocktailListItem from \"../../components/CocktailList/components/CocktailListItem/CocktailListItem\";\r\nimport { Favorite, FavoriteBorder } from \"@mui/icons-material\";\r\nimport { StyledGrid } from \"./styled\";\r\nimport { FAVORITE_LOCAL_KEY } from \"../../utils/constants\";\r\n\r\nconst Favorites = () => {\r\n  const [localItems, setLocalItems] = useState(() => {\r\n    return JSON.parse(\r\n      localStorage.getItem(FAVORITE_LOCAL_KEY) || \"[]\"\r\n    ) as Cocktail[];\r\n  });\r\n\r\n  const removeFromFavorite = useCallback(\r\n    (event: SyntheticEvent<HTMLInputElement>) => {\r\n      if (event.currentTarget.checked) {\r\n        return;\r\n      }\r\n\r\n      const name = event.currentTarget.dataset.name;\r\n\r\n      if (!name) {\r\n        return;\r\n      }\r\n\r\n      const items = localItems.filter((item) => item.name !== name);\r\n      setLocalItems(items);\r\n      localStorage.setItem(\"favorites\", JSON.stringify(items ?? []));\r\n    },\r\n    [localItems]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n        {localItems.map((cocktail, index) => (\r\n          <StyledGrid item xs={12} md={6} lg={4} key={index}>\r\n            <Checkbox\r\n              inputProps={\r\n                {\r\n                  \"data-name\": cocktail.name,\r\n                } as Record<string, string>\r\n              }\r\n              onChange={removeFromFavorite}\r\n              icon={<FavoriteBorder />}\r\n              checked={true}\r\n              checkedIcon={<Favorite />}\r\n            />\r\n            <CocktailListItem key={cocktail.id} {...cocktail} />\r\n          </StyledGrid>\r\n        ))}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n"],"names":["image","name","id","info","glass","sx","maxWidth","margin","disabled","style","textDecoration","to","component","height","alt","minHeight","variant","color","alcoholInfo","glassType","toLowerCase","StyledGrid","styled","Grid","useState","JSON","parse","localStorage","getItem","FAVORITE_LOCAL_KEY","localItems","setLocalItems","removeFromFavorite","useCallback","event","currentTarget","checked","dataset","items","filter","item","setItem","stringify","container","alignItems","justifyContent","map","cocktail","index","xs","md","lg","Checkbox","inputProps","onChange","icon","FavoriteBorder","checkedIcon","Favorite","CocktailListItem"],"sourceRoot":""}